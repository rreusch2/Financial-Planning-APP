"""Ensure all models are up-to-date

Revision ID: 1c637f52ee52
Revises: d15dec1815ec
Create Date: 2024-11-12 00:19:30.826044

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '1c637f52ee52'
down_revision = 'd15dec1815ec'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        # Alter 'password_hash' column to VARCHAR(256) to accommodate existing data
        batch_op.alter_column(
            'password_hash',
            existing_type=sa.VARCHAR(length=256),
            type_=sa.String(length=256),  # Ensure it remains VARCHAR(256)
            existing_nullable=False
        )
        
        # Drop existing unique constraints on 'email' and 'username'
        batch_op.drop_constraint('user_email_key', type_='unique')
        batch_op.drop_constraint('user_username_key', type_='unique')
        
        # Recreate unique indexes on 'email' and 'username'
        # Setting unique=True ensures uniqueness is maintained
        batch_op.create_index(
            'ix_user_email',
            ['email'],
            unique=True
        )
        batch_op.create_index(
            'ix_user_username',
            ['username'],
            unique=True
        )
        
        # Drop the 'access_token' column if it's no longer needed
        batch_op.drop_column('access_token')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        # Re-add the 'access_token' column if downgrading
        batch_op.add_column(
            sa.Column(
                'access_token',
                sa.VARCHAR(length=256),
                autoincrement=False,
                nullable=True
            )
        )
        
        # Drop the unique indexes on 'email' and 'username'
        batch_op.drop_index('ix_user_username')
        batch_op.drop_index('ix_user_email')
        
        # Recreate unique constraints on 'username' and 'email'
        batch_op.create_unique_constraint(
            'user_username_key',
            ['username']
        )
        batch_op.create_unique_constraint(
            'user_email_key',
            ['email']
        )
        
        # Alter 'password_hash' column back to VARCHAR(256) if needed
        # If previously it was VARCHAR(128), adjust accordingly
        # However, based on your current setup, it's VARCHAR(256)
        # So ensure consistency
        batch_op.alter_column(
            'password_hash',
            existing_type=sa.String(length=256),
            type_=sa.VARCHAR(length=256),
            existing_nullable=False
        )

    # ### end Alembic commands ###
